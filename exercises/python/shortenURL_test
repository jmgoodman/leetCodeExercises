class Codec: # this is gonna need a database. presumably a hash table whose memory addresses map cleanly and invertibly to shortened URLs
    def __init__(self):
        self.hashmap = dict()

    def encode(self, longUrl: str) -> str:
        """Encodes a URL to a shortened URL.
        """
        # let's just calc a 5-element string
        

    def decode(self, shortUrl: str) -> str:
        """Decodes a shortened URL to its original URL.
        """
        

# Your Codec object will be instantiated and called as such:
# codec = Codec()
# codec.decode(codec.encode(url))